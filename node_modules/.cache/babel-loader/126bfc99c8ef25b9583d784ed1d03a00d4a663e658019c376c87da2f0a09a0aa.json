{"ast":null,"code":"var _jsxFileName = \"/home/dev/Documents/practical-reactjs-coding-challenges/text-analyzer-tool/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.scss';\nimport BottomResultBox from './components/BottomResultBox';\nimport Footer from './components/Footer';\nimport Navbar from './components/Navbar';\nimport ResultBox from './components/ResultBox';\nimport TextArea from './components/TextArea';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [text, setText] = useState('');\n  const [charactersLength, setCharactersLength] = useState(0);\n  const [wordsLength, setWordsLength] = useState(0);\n  const [sentencesCount, setSentencesCount] = useState(0);\n  const handleText = e => {\n    let {\n      value\n    } = e.target;\n    setText(value);\n    setCharactersLength(value.length);\n    setWordsLength(value.split(' ').length);\n    setSentencesCount(value.split('.').length);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"small-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-app\",\n        children: [/*#__PURE__*/_jsxDEV(ResultBox, {\n          wordsLength: wordsLength,\n          charactersLength: charactersLength,\n          sentencesCount: sentencesCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n          handleText: handleText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BottomResultBox, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"SfWMMdKeu3MI8wwxQLaenhW6+0I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","BottomResultBox","Footer","Navbar","ResultBox","TextArea","App","text","setText","charactersLength","setCharactersLength","wordsLength","setWordsLength","sentencesCount","setSentencesCount","handleText","e","value","target","length","split"],"sources":["/home/dev/Documents/practical-reactjs-coding-challenges/text-analyzer-tool/src/App.tsx"],"sourcesContent":["import { ChangeEvent, useState } from 'react' \nimport './App.scss'\nimport BottomResultBox from './components/BottomResultBox'\nimport Footer from './components/Footer'\nimport Navbar from './components/Navbar'\nimport ResultBox from './components/ResultBox'\nimport TextArea from './components/TextArea'\n\nconst App = () => {\n  const [text, setText] = useState<string>('');  \n  const [charactersLength, setCharactersLength] = useState<number>(0);  \n  const [wordsLength, setWordsLength] = useState<number>(0);  \n  const [sentencesCount, setSentencesCount] =useState<number>(0);\n\n  const handleText = (e: ChangeEvent<HTMLTextAreaElement>) => {\n    let { value } = e.target;\n    setText(value);\n    setCharactersLength(value.length);\n    setWordsLength(value.split(' ').length);\n    setSentencesCount(value.split('.').length)\n  }\n\n  return (\n    <>\n      <Navbar />\n      <div className=\"small-container\">\n        <div className=\"main-app\">\n          <ResultBox wordsLength={wordsLength} charactersLength={charactersLength} sentencesCount={sentencesCount} />\n          <TextArea handleText={handleText}/>\n          <BottomResultBox />\n        </div>\n      </div>\n      <Footer />\n    </>\n  )\n}\n\nexport default App\n"],"mappings":";;AAAA,SAAsBA,QAAQ,QAAQ,OAAO;AAC7C,OAAO,YAAY;AACnB,OAAOC,eAAe,MAAM,8BAA8B;AAC1D,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,QAAQ,MAAM,uBAAuB;AAAA;AAAA;AAE5C,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAS,EAAE,CAAC;EAC5C,MAAM,CAACS,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGV,QAAQ,CAAS,CAAC,CAAC;EACnE,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAS,CAAC,CAAC;EACzD,MAAM,CAACa,cAAc,EAAEC,iBAAiB,CAAC,GAAEd,QAAQ,CAAS,CAAC,CAAC;EAE9D,MAAMe,UAAU,GAAIC,CAAmC,IAAK;IAC1D,IAAI;MAAEC;IAAM,CAAC,GAAGD,CAAC,CAACE,MAAM;IACxBV,OAAO,CAACS,KAAK,CAAC;IACdP,mBAAmB,CAACO,KAAK,CAACE,MAAM,CAAC;IACjCP,cAAc,CAACK,KAAK,CAACG,KAAK,CAAC,GAAG,CAAC,CAACD,MAAM,CAAC;IACvCL,iBAAiB,CAACG,KAAK,CAACG,KAAK,CAAC,GAAG,CAAC,CAACD,MAAM,CAAC;EAC5C,CAAC;EAED,oBACE;IAAA,wBACE,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG,eACV;MAAK,SAAS,EAAC,iBAAiB;MAAA,uBAC9B;QAAK,SAAS,EAAC,UAAU;QAAA,wBACvB,QAAC,SAAS;UAAC,WAAW,EAAER,WAAY;UAAC,gBAAgB,EAAEF,gBAAiB;UAAC,cAAc,EAAEI;QAAe;UAAA;UAAA;UAAA;QAAA,QAAG,eAC3G,QAAC,QAAQ;UAAC,UAAU,EAAEE;QAAW;UAAA;UAAA;UAAA;QAAA,QAAE,eACnC,QAAC,eAAe;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA;IACf;MAAA;MAAA;MAAA;IAAA,QACF,eACN,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,gBACT;AAEP,CAAC;AAAA,GA3BKT,GAAG;AAAA,KAAHA,GAAG;AA6BT,eAAeA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}