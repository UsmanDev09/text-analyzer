{"ast":null,"code":"var _jsxFileName = \"/home/dev/Documents/practical-reactjs-coding-challenges/text-analyzer-tool/src/components/TextArea/index.tsx\",\n  _s = $RefreshSig$();\nimport './index.scss';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextArea = () => {\n  _s();\n  const [text, setText] = useState('');\n  const [charactersLength, setCharactersLength] = useState(0);\n  const [words, setWordsLength] = useState(0);\n  const handleText = e => {\n    let {\n      value\n    } = e.target;\n    setText(value);\n    setCharactersLength(value.length);\n    setWordsLength(value.split(' ').length);\n  };\n  return /*#__PURE__*/_jsxDEV(\"textarea\", {\n    onChange: e => handleText(e),\n    className: \"text-area\",\n    placeholder: \"Paste your text here...\",\n    autoFocus: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 10\n  }, this);\n};\n_s(TextArea, \"daX3tqa2H9Iod4+BnZ+3AF1TcxY=\");\n_c = TextArea;\nexport default TextArea;\nvar _c;\n$RefreshReg$(_c, \"TextArea\");","map":{"version":3,"names":["useState","TextArea","text","setText","charactersLength","setCharactersLength","words","setWordsLength","handleText","e","value","target","length","split"],"sources":["/home/dev/Documents/practical-reactjs-coding-challenges/text-analyzer-tool/src/components/TextArea/index.tsx"],"sourcesContent":["import './index.scss'\nimport { ChangeEvent, useState } from 'react'\n\nconst TextArea = () => {\n  const [text, setText] = useState('');  \n  const [charactersLength, setCharactersLength] = useState(0);  \n  const [words, setWordsLength] = useState(0);  \n\n\n  const handleText = (e: ChangeEvent<HTMLTextAreaElement>) => {\n    let { value } = e.target;\n    setText(value);\n    setCharactersLength(value.length);\n    setWordsLength(value.split(' ').length);\n  }\n\n  return <textarea onChange={(e) => handleText(e)} className=\"text-area\" placeholder=\"Paste your text here...\" autoFocus/>\n}\n\nexport default TextArea\n"],"mappings":";;AAAA,OAAO,cAAc;AACrB,SAAsBA,QAAQ,QAAQ,OAAO;AAAA;AAE7C,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACrB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACI,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC;EAC3D,MAAM,CAACM,KAAK,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EAG3C,MAAMQ,UAAU,GAAIC,CAAmC,IAAK;IAC1D,IAAI;MAAEC;IAAM,CAAC,GAAGD,CAAC,CAACE,MAAM;IACxBR,OAAO,CAACO,KAAK,CAAC;IACdL,mBAAmB,CAACK,KAAK,CAACE,MAAM,CAAC;IACjCL,cAAc,CAACG,KAAK,CAACG,KAAK,CAAC,GAAG,CAAC,CAACD,MAAM,CAAC;EACzC,CAAC;EAED,oBAAO;IAAU,QAAQ,EAAGH,CAAC,IAAKD,UAAU,CAACC,CAAC,CAAE;IAAC,SAAS,EAAC,WAAW;IAAC,WAAW,EAAC,yBAAyB;IAAC,SAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAAE;AAC1H,CAAC;AAAA,GAdKR,QAAQ;AAAA,KAARA,QAAQ;AAgBd,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}